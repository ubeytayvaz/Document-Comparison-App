import streamlit as st
import docx
from PyPDF2 import PdfReader
import difflib
import io
import fitz  # PyMuPDF kÃ¼tÃ¼phanesi
from PIL import Image

# Sayfa yapÄ±landÄ±rmasÄ±nÄ± geniÅŸ olarak ayarlayarak karÅŸÄ±laÅŸtÄ±rma iÃ§in daha fazla alan saÄŸlÄ±yoruz
st.set_page_config(layout="wide", page_title="DÃ¶kÃ¼man KarÅŸÄ±laÅŸtÄ±rma AracÄ±")

def get_text_from_file(uploaded_file):
    """
    YÃ¼klenen dosyayÄ± tÃ¼rÃ¼ne gÃ¶re okur ve metin iÃ§eriÄŸini dÃ¶ndÃ¼rÃ¼r.
    Desteklenen formatlar: .txt, .pdf, .docx
    """
    text = ""
    # DosyanÄ±n var olup olmadÄ±ÄŸÄ±nÄ± kontrol et
    if uploaded_file is not None:
        try:
            # Dosya imlecini baÅŸa al
            uploaded_file.seek(0)
            # Dosya tÃ¼rÃ¼ne gÃ¶re iÅŸlem yap
            if uploaded_file.type == "text/plain":
                # Txt dosyalarÄ± iÃ§in
                stringio = io.StringIO(uploaded_file.getvalue().decode("utf-8"))
                text = stringio.read()
            elif uploaded_file.type == "application/pdf":
                # PDF dosyalarÄ± iÃ§in
                pdf_reader = PdfReader(uploaded_file)
                for page in pdf_reader.pages:
                    page_text = page.extract_text()
                    if page_text:
                        text += page_text + "\n"
            elif uploaded_file.type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
                # Docx (Word) dosyalarÄ± iÃ§in
                doc = docx.Document(uploaded_file)
                for para in doc.paragraphs:
                    text += para.text + "\n"
        except Exception as e:
            st.error(f"Dosya okunurken bir hata oluÅŸtu: {uploaded_file.name}. Hata: {e}")
            return None
    return text

def render_pdf_to_images(uploaded_file):
    """
    YÃ¼klenen PDF dosyasÄ±nÄ±n sayfalarÄ±nÄ± gÃ¶rsellere dÃ¶nÃ¼ÅŸtÃ¼rÃ¼r.
    """
    images = []
    try:
        # Dosya imlecini baÅŸa al
        uploaded_file.seek(0)
        # Dosya iÃ§eriÄŸini byte olarak oku
        pdf_bytes = uploaded_file.read()
        pdf_document = fitz.open(stream=pdf_bytes, filetype="pdf")
        for page_num in range(len(pdf_document)):
            page = pdf_document.load_page(page_num)
            pix = page.get_pixmap()
            img_data = pix.tobytes("png")
            image = Image.open(io.BytesIO(img_data))
            images.append(image)
        pdf_document.close()
    except Exception as e:
        st.error(f"PDF gÃ¶rselleÅŸtirilirken bir hata oluÅŸtu: {uploaded_file.name}. Hata: {e}")
        return []
    return images


# Ana baÅŸlÄ±k ve bilgilendirme
st.title("ğŸ“„ GeliÅŸmiÅŸ DÃ¶kÃ¼man KarÅŸÄ±laÅŸtÄ±rma AracÄ±")
st.info("KarÅŸÄ±laÅŸtÄ±rmak istediÄŸiniz iki dÃ¶kÃ¼manÄ± (Word, PDF, veya TXT) yÃ¼kleyerek metinsel farklarÄ± gÃ¶rebilirsiniz. EÄŸer iki dosya da PDF ise, gÃ¶rsel olarak da karÅŸÄ±laÅŸtÄ±rÄ±lacaktÄ±r.")

# Dosya yÃ¼kleme alanlarÄ±nÄ± iki sÃ¼tunda gÃ¶ster
col1, col2 = st.columns(2)

with col1:
    st.subheader("Birinci Dosya")
    uploaded_file1 = st.file_uploader(
        "LÃ¼tfen birinci dosyayÄ± seÃ§in",
        type=['txt', 'pdf', 'docx'],
        key="file1",
        help="KarÅŸÄ±laÅŸtÄ±rÄ±lacak ilk dosyayÄ± buraya yÃ¼kleyin."
    )

with col2:
    st.subheader("Ä°kinci Dosya")
    uploaded_file2 = st.file_uploader(
        "LÃ¼tfen ikinci dosyayÄ± seÃ§in",
        type=['txt', 'pdf', 'docx'],
        key="file2",
        help="KarÅŸÄ±laÅŸtÄ±rÄ±lacak ikinci dosyayÄ± buraya yÃ¼kleyin."
    )

# Ä°ki dosya da yÃ¼klendiÄŸinde karÅŸÄ±laÅŸtÄ±rmayÄ± yap
if uploaded_file1 and uploaded_file2:
    
    # EÄŸer her iki dosya da PDF ise, gÃ¶rsel karÅŸÄ±laÅŸtÄ±rma yap
    if uploaded_file1.type == "application/pdf" and uploaded_file2.type == "application/pdf":
        st.header("GÃ¶rsel KarÅŸÄ±laÅŸtÄ±rma", divider='rainbow')
        with st.spinner("PDF sayfalarÄ± gÃ¶rsellere dÃ¶nÃ¼ÅŸtÃ¼rÃ¼lÃ¼yor... LÃ¼tfen bekleyin."):
            images1 = render_pdf_to_images(uploaded_file1)
            images2 = render_pdf_to_images(uploaded_file2)

            if images1 and images2:
                st.success("PDF'ler gÃ¶rselleÅŸtirildi. SayfalarÄ± aÅŸaÄŸÄ±da karÅŸÄ±laÅŸtÄ±rabilirsiniz.")
                
                # Ä°ki PDF'in sayfa sayÄ±larÄ±ndan bÃ¼yÃ¼k olanÄ± al
                max_pages = max(len(images1), len(images2))
                
                for i in range(max_pages):
                    st.markdown(f"--- \n ### Sayfa {i+1}")
                    img_col1, img_col2 = st.columns(2)
                    
                    # Birinci PDF'in sayfasÄ±nÄ± gÃ¶ster
                    with img_col1:
                        if i < len(images1):
                            st.image(images1[i], caption=f"{uploaded_file1.name} - Sayfa {i+1}", use_column_width=True)
                        else:
                            st.warning(f"Bu dÃ¶kÃ¼manda {i+1}. sayfa bulunmuyor.")
                    
                    # Ä°kinci PDF'in sayfasÄ±nÄ± gÃ¶ster
                    with img_col2:
                        if i < len(images2):
                            st.image(images2[i], caption=f"{uploaded_file2.name} - Sayfa {i+1}", use_column_width=True)
                        else:
                            st.warning(f"Bu dÃ¶kÃ¼manda {i+1}. sayfa bulunmuyor.")

    # Metinsel karÅŸÄ±laÅŸtÄ±rma her zaman yapÄ±lÄ±r
    st.header("Metinsel KarÅŸÄ±laÅŸtÄ±rma", divider='rainbow')
    with st.spinner("Dosyalar okunuyor ve metinler karÅŸÄ±laÅŸtÄ±rÄ±lÄ±yor... LÃ¼tfen bekleyin."):
        # Dosyalardan metinleri al
        text1 = get_text_from_file(uploaded_file1)
        text2 = get_text_from_file(uploaded_file2)

        # Metinler baÅŸarÄ±yla alÄ±ndÄ±ysa devam et
        if text1 is not None and text2 is not None:
            # Metinleri satÄ±rlara ayÄ±r
            lines1 = text1.splitlines()
            lines2 = text2.splitlines()

            # HTMLDiff kullanarak farklarÄ± gÃ¶steren bir HTML tablosu oluÅŸtur
            html_diff = difflib.HtmlDiff(wrapcolumn=80).make_table(
                lines1,
                lines2,
                fromdesc=f"Dosya 1: {uploaded_file1.name}",
                todesc=f"Dosya 2: {uploaded_file2.name}"
            )

            st.success("Metinsel karÅŸÄ±laÅŸtÄ±rma tamamlandÄ±! SonuÃ§lar aÅŸaÄŸÄ±dadÄ±r.")

            # OluÅŸturulan HTML'i ekranda gÃ¶ster
            st.markdown(html_diff, unsafe_allow_html=True)

elif uploaded_file1 and not uploaded_file2:
    st.warning("LÃ¼tfen karÅŸÄ±laÅŸtÄ±rma yapmak iÃ§in ikinci dosyayÄ± da yÃ¼kleyin.")
elif not uploaded_file1 and uploaded_file2:
    st.warning("LÃ¼tfen karÅŸÄ±laÅŸtÄ±rma yapmak iÃ§in birinci dosyayÄ± da yÃ¼kleyin.")

